{
    "title": "RAG Web Browser",
    "description": "RAG Web Browser for a retrieval augmented generation workflows. Retrieve and return website content from URL or the top Google Search Results Pages",
    "type": "object",
    "schemaVersion": 1,
    "properties": {
        "query": {
            "title": "Search term or URL",
            "type": "string",
            "description": "Enter Google Search keywords or a URL to a specific web page. Note that the keywords might include the [advanced search operators](https://blog.apify.com/how-to-scrape-google-like-a-pro/). Examples:\n\n- <code>san francisco weather</code>\n- <code>https://www.cnn.com</code>\n- <code>function calling site:openai.com</code>",
            "prefill": "san francisco weather",
            "editor": "textfield",
            "pattern": "[^\\s]+"
        },
        "maxResults": {
            "title": "Maximum results",
            "type": "integer",
            "description": "The maximum number of top organic Google Search results whose web pages will be extracted. If `query` is a URL, then this field is ignored and the Actor only fetches the specific web page.",
            "prefill": 3,
            "minimum": 1,
            "maximum": 100
        },
        "outputFormats": {
            "title": "Output formats",
            "type": "array",
            "description": "Select one or more formats to which the target web pages will be extracted and saved in the resulting dataset.",
            "editor": "select",
            "default": ["text"],
            "items": {
                "type": "string",
                "enum": ["text", "markdown", "html"],
                "enumTitles": ["Plain text", "Markdown", "HTML"]
            }
        },
        "requestTimeoutSecs": {
            "title": "Request timeout",
            "type": "integer",
            "description": "The maximum time in seconds available for one request, including querying Google Search and scraping the target web pages. For example, OpenAI allows only [45 seconds](https://platform.openai.com/docs/actions/production#timeouts) for custom actions. If a target page loading and extraction exceeds this timeout, the corresponding page will be skipped in results to ensure at least some results are returned within the timeout. If no page is extracted within the timeout, the whole request fails.",
            "minimum": 1,
            "maximum": 300,
            "default": 40,
            "unit": "seconds"
        },
        "proxyGroupSearch": {
            "title": "Google SERP proxy group",
            "type": "string",
            "description": "Enables overriding the default Apify Proxy group used for fetching Google Search results.",
            "editor": "select",
            "default": "GOOGLE_SERP",
            "enum": ["GOOGLE_SERP", "SHADER"],
            "sectionCaption": "Google Search scraping settings"
        },
        "maxRequestRetriesSearch": {
            "title": "Google SERP maximum retries",
            "type": "integer",
            "description": "The maximum number of times the Actor will retry fetching the Google Seach results on error. If the last attempt fails, the entire request fails.",
            "minimum": 0,
            "maximum": 5,
            "default": 2
        },
        "proxyConfiguration": {
            "title": "Proxy configuration",
            "type": "object",
            "description": "Apify Proxy configuration used for scraping the target web pages.",
            "default": {
                "useApifyProxy": true
            },
            "prefill": {
                "useApifyProxy": true
            },
            "editor": "proxy",
            "sectionCaption": "Target pages scraping settings"
        },
        "initialConcurrency": {
            "title": "Initial browsing concurrency",
            "type": "integer",
            "description": "The initial number of web browsers running in parallel. The system automatically scales the number based on the CPU and memory usage, in the range specified by `minConcurrency` and `maxConcurrency`. If the initial value is `0`, the Actor picks the number automatically based on the available memory.",
            "minimum": 0,
            "maximum": 50,
            "default": 4
        },
        "minConcurrency": {
            "title": "Minimum browsing concurrency",
            "type": "integer",
            "description": "The minimum number of web browsers running in parallel.",
            "minimum": 1,
            "maximum": 50,
            "default": 3
        },
        "maxConcurrency": {
            "title": "Maximum browsing concurrency",
            "type": "integer",
            "description": "The maximum number of web browsers running in parallel.",
            "minimum": 1,
            "maximum": 50,
            "default": 20
        },
        "maxRequestRetries": {
            "title": "Target page max retries",
            "type": "integer",
            "description": "The maximum number of retry attempts on network, proxy, or server errors. If the (n+1)-th request fails, it will be marked as failed.",
            "minimum": 0,
            "maximum": 3,
            "default": 1
        },
        "requestTimeoutContentCrawlSecs": {
            "title": "Target page scraping timeout",
            "type": "integer",
            "description": "The maximum time in seconds for loading and extractiong the target web page content. The value should be smaller than the `requestTimeoutSecs` setting to have any effect.",
            "minimum": 1,
            "maximum": 60,
            "default": 30,
            "unit": "seconds"
        },
        "dynamicContentWaitSecs": {
            "title": "Target page dynamic content timeout",
            "type": "integer",
            "description": "The maximum time in seconds to wait for dynamic page content to load. The Actor considers the web page as fully loaded once this time elapses or when the network becomes idle.",
            "default": 10,
            "unit": "seconds"
        },
        "removeCookieWarnings": {
            "title": "Remove cookie warnings",
            "type": "boolean",
            "description": "If enabled, the Actor attempts to close or remove cookie consent dialogs to improve the quality of extracted text. Note that this setting increases the latency.",
            "default": true
        },
        "debugMode": {
            "title": "Enable debug mode",
            "type": "boolean",
            "description": "If enabled, the Actor will store debugging information into the resulting dataset under the `debug` field.",
            "default": false
        }
    }
}
